name: ci

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - master
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - uses: actions/cache@v1
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - uses: Gr1N/setup-poetry@v1
      - run: poetry install
      - run: poetry debug

      # Format.
      - name: Check Format
        run: poetry run invoke format

      # Lint.
      - name: Run linters
        run: poetry run invoke lint

      # Check.
      - name: Run static analysers
        run: poetry run invoke check

      # Docs.
      - name: Build the documentation
        run: poetry run invoke docs
      - name: Upload documentation for release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v1
        with:
          name: docs
          path: docs/build/html/

      # Test.
      - name: Run the unit tests
        run: poetry run invoke test

      # Dist.
      - name: Build packages
        run: poetry build
      - name: Upload artifacts for release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v1
        with:
          name: wheel
          path: dist/

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - ci
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: wheel
          path: dist/
      - uses: actions/download-artifact@v1
        with:
          name: docs
          path: docs/build/html
      - uses: Gr1N/setup-poetry@v1
      - name: Install tools
        run: |
          KEEPARELEASE_VERSION=1.2.0
          mkdir -p bin
          curl -sLO https://github.com/rgreinho/keeparelease/releases/download/${KEEPARELEASE_VERSION}/keeparelease-${KEEPARELEASE_VERSION}-linux-amd64
          chmod a+x keeparelease-${KEEPARELEASE_VERSION}-linux-amd64
          mv keeparelease-${KEEPARELEASE_VERSION}-linux-amd64 bin/keeparelease
          echo "::add-path::$GITHUB_WORKSPACE/bin"
      - name: Prepare release content
        run: keeparelease -x > ${{ github.workflow }}-release.md
      - name: Publish the release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ${{ github.workflow }}-release.md
          files: |
            dist/*
      - name: Publish the documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html
      - name: publish the packages
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}
